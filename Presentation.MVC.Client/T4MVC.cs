// <auto-generated />
// This file was generated by a T4 template.
// Don't change it directly as your change would get overwritten.  Instead, make changes
// to the .tt file (i.e. the T4 template) and save it to regenerate this file.

// Make sure the compiler doesn't complain about missing Xml comments
#pragma warning disable 1591
#region T4MVC

using System;
using System.Diagnostics;
using System.CodeDom.Compiler;
using System.Collections.Generic;
using System.Linq;
using System.Runtime.CompilerServices;
using System.Web;
using System.Web.Hosting;
using System.Web.Mvc;
using System.Web.Mvc.Ajax;
using System.Web.Mvc.Html;
using System.Web.Routing;
using T4MVC;

[GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
public static class MVCT
{
    static readonly AdminClass s_Admin = new AdminClass();
    public static AdminClass Admin { get { return s_Admin; } }
    public static Phoenix.PhoenixApp.Presentation.MVC.Client.Controllers.AccountController Account = new Phoenix.PhoenixApp.Presentation.MVC.Client.Controllers.T4MVC_AccountController();
    public static Phoenix.PhoenixApp.Presentation.MVC.Client.Controllers.EditController Edit = new Phoenix.PhoenixApp.Presentation.MVC.Client.Controllers.T4MVC_EditController();
    public static Phoenix.PhoenixApp.Presentation.MVC.Client.Controllers.FriendController Friend = new Phoenix.PhoenixApp.Presentation.MVC.Client.Controllers.T4MVC_FriendController();
    public static Phoenix.PhoenixApp.Presentation.MVC.Client.Controllers.HomeController Home = new Phoenix.PhoenixApp.Presentation.MVC.Client.Controllers.T4MVC_HomeController();
    public static Phoenix.PhoenixApp.Presentation.MVC.Client.Controllers.ImageController Image = new Phoenix.PhoenixApp.Presentation.MVC.Client.Controllers.T4MVC_ImageController();
    public static Phoenix.PhoenixApp.Presentation.MVC.Client.Controllers.MediaController Media = new Phoenix.PhoenixApp.Presentation.MVC.Client.Controllers.T4MVC_MediaController();
    public static Phoenix.PhoenixApp.Presentation.MVC.Client.Controllers.PostController Post = new Phoenix.PhoenixApp.Presentation.MVC.Client.Controllers.T4MVC_PostController();
    public static Phoenix.PhoenixApp.Presentation.MVC.Client.Controllers.ProfileController Profile = new Phoenix.PhoenixApp.Presentation.MVC.Client.Controllers.T4MVC_ProfileController();
    public static Phoenix.PhoenixApp.Presentation.MVC.Client.Controllers.SearchController Search = new Phoenix.PhoenixApp.Presentation.MVC.Client.Controllers.T4MVC_SearchController();
    public static T4MVC.SharedController Shared = new T4MVC.SharedController();
}

namespace T4MVC
{
    [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
    public class AdminClass
    {
        public readonly string Name = "Admin";
        public Phoenix.PhoenixApp.Presentation.MVC.Client.Areas.Admin.Controllers.HomeController Home = new Phoenix.PhoenixApp.Presentation.MVC.Client.Areas.Admin.Controllers.T4MVC_HomeController();
        public T4MVC.Admin.SharedController Shared = new T4MVC.Admin.SharedController();
    }
}

namespace T4MVC
{
    [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
    public class Dummy
    {
        private Dummy() { }
        public static Dummy Instance = new Dummy();
    }
}

[GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
public class T4MVC_System_Web_Mvc_ActionResult : System.Web.Mvc.ActionResult, IT4MVCActionResult
{
    public T4MVC_System_Web_Mvc_ActionResult(string area, string controller, string action, string protocol = null): base()
    {
        this.InitMVCT4Result(area, controller, action, protocol);
    }
     
    public override void ExecuteResult(System.Web.Mvc.ControllerContext context) { }
    
    public string Controller { get; set; }
    public string Action { get; set; }
    public string Protocol { get; set; }
    public RouteValueDictionary RouteValueDictionary { get; set; }
}



namespace Links
{
    [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
    public static class Scripts {
        private const string URLPATH = "~/Scripts";
        public static string Url() { return T4MVCHelpers.ProcessVirtualPath(URLPATH); }
        public static string Url(string fileName) { return T4MVCHelpers.ProcessVirtualPath(URLPATH + "/" + fileName); }
        public static readonly string _references_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/_references.min.js") ? Url("_references.min.js") : Url("_references.js");
                      
        public static readonly string jquery_1_7_1_intellisense_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/jquery-1.7.1.intellisense.min.js") ? Url("jquery-1.7.1.intellisense.min.js") : Url("jquery-1.7.1.intellisense.js");
                      
        public static readonly string jquery_1_7_1_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/jquery-1.7.1.min.js") ? Url("jquery-1.7.1.min.js") : Url("jquery-1.7.1.js");
                      
        public static readonly string jquery_1_8_2_intellisense_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/jquery-1.8.2.intellisense.min.js") ? Url("jquery-1.8.2.intellisense.min.js") : Url("jquery-1.8.2.intellisense.js");
                      
        public static readonly string jquery_1_8_2_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/jquery-1.8.2.min.js") ? Url("jquery-1.8.2.min.js") : Url("jquery-1.8.2.js");
                      
        public static readonly string jquery_1_8_2_min_js = Url("jquery-1.8.2.min.js");
        public static readonly string jquery_ui_1_8_20_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/jquery-ui-1.8.20.min.js") ? Url("jquery-ui-1.8.20.min.js") : Url("jquery-ui-1.8.20.js");
                      
        public static readonly string jquery_ui_1_9_0_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/jquery-ui-1.9.0.min.js") ? Url("jquery-ui-1.9.0.min.js") : Url("jquery-ui-1.9.0.js");
                      
        public static readonly string jquery_ui_1_9_0_min_js = Url("jquery-ui-1.9.0.min.js");
        public static readonly string jquery_unobtrusive_ajax_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/jquery.unobtrusive-ajax.min.js") ? Url("jquery.unobtrusive-ajax.min.js") : Url("jquery.unobtrusive-ajax.js");
                      
        public static readonly string jquery_unobtrusive_ajax_min_js = Url("jquery.unobtrusive-ajax.min.js");
        public static readonly string jquery_validate_vsdoc_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/jquery.validate-vsdoc.min.js") ? Url("jquery.validate-vsdoc.min.js") : Url("jquery.validate-vsdoc.js");
                      
        public static readonly string jquery_validate_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/jquery.validate.min.js") ? Url("jquery.validate.min.js") : Url("jquery.validate.js");
                      
        public static readonly string jquery_validate_min_js = Url("jquery.validate.min.js");
        public static readonly string jquery_validate_unobtrusive_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/jquery.validate.unobtrusive.min.js") ? Url("jquery.validate.unobtrusive.min.js") : Url("jquery.validate.unobtrusive.js");
                      
        public static readonly string jquery_validate_unobtrusive_min_js = Url("jquery.validate.unobtrusive.min.js");
        public static readonly string knockout_2_1_0_debug_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/knockout-2.1.0.debug.min.js") ? Url("knockout-2.1.0.debug.min.js") : Url("knockout-2.1.0.debug.js");
                      
        public static readonly string knockout_2_1_0_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/knockout-2.1.0.min.js") ? Url("knockout-2.1.0.min.js") : Url("knockout-2.1.0.js");
                      
        public static readonly string knockout_2_2_0_debug_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/knockout-2.2.0.debug.min.js") ? Url("knockout-2.2.0.debug.min.js") : Url("knockout-2.2.0.debug.js");
                      
        public static readonly string knockout_2_2_0_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/knockout-2.2.0.min.js") ? Url("knockout-2.2.0.min.js") : Url("knockout-2.2.0.js");
                      
        public static readonly string modernizr_2_5_3_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/modernizr-2.5.3.min.js") ? Url("modernizr-2.5.3.min.js") : Url("modernizr-2.5.3.js");
                      
        public static readonly string modernizr_2_6_2_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/modernizr-2.6.2.min.js") ? Url("modernizr-2.6.2.min.js") : Url("modernizr-2.6.2.js");
                      
    }

    [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
    public static class Content {
        private const string URLPATH = "~/Content";
        public static string Url() { return T4MVCHelpers.ProcessVirtualPath(URLPATH); }
        public static string Url(string fileName) { return T4MVCHelpers.ProcessVirtualPath(URLPATH + "/" + fileName); }
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public static class css {
            private const string URLPATH = "~/Content/css";
            public static string Url() { return T4MVCHelpers.ProcessVirtualPath(URLPATH); }
            public static string Url(string fileName) { return T4MVCHelpers.ProcessVirtualPath(URLPATH + "/" + fileName); }
            [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
            public static class custom_theme {
                private const string URLPATH = "~/Content/css/custom-theme";
                public static string Url() { return T4MVCHelpers.ProcessVirtualPath(URLPATH); }
                public static string Url(string fileName) { return T4MVCHelpers.ProcessVirtualPath(URLPATH + "/" + fileName); }
                [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
                public static class images {
                    private const string URLPATH = "~/Content/css/custom-theme/images";
                    public static string Url() { return T4MVCHelpers.ProcessVirtualPath(URLPATH); }
                    public static string Url(string fileName) { return T4MVCHelpers.ProcessVirtualPath(URLPATH + "/" + fileName); }
                    public static readonly string ui_bg_flat_30_cccccc_40x100_png = Url("ui-bg_flat_30_cccccc_40x100.png");
                    public static readonly string ui_bg_flat_50_5c5c5c_40x100_png = Url("ui-bg_flat_50_5c5c5c_40x100.png");
                    public static readonly string ui_bg_glass_40_ffc73d_1x400_png = Url("ui-bg_glass_40_ffc73d_1x400.png");
                    public static readonly string ui_bg_highlight_soft_20_ededed_1x100_png = Url("ui-bg_highlight-soft_20_ededed_1x100.png");
                    public static readonly string ui_bg_highlight_soft_25_222222_1x100_png = Url("ui-bg_highlight-soft_25_222222_1x100.png");
                    public static readonly string ui_bg_highlight_soft_40_6bb130_1x100_png = Url("ui-bg_highlight-soft_40_6bb130_1x100.png");
                    public static readonly string ui_bg_highlight_soft_80_eeeeee_1x100_png = Url("ui-bg_highlight-soft_80_eeeeee_1x100.png");
                    public static readonly string ui_bg_inset_soft_25_ffffff_1x100_png = Url("ui-bg_inset-soft_25_ffffff_1x100.png");
                    public static readonly string ui_bg_inset_soft_30_6bb130_1x100_png = Url("ui-bg_inset-soft_30_6bb130_1x100.png");
                    public static readonly string ui_icons_222222_256x240_png = Url("ui-icons_222222_256x240.png");
                    public static readonly string ui_icons_4b8e0b_256x240_png = Url("ui-icons_4b8e0b_256x240.png");
                    public static readonly string ui_icons_a83300_256x240_png = Url("ui-icons_a83300_256x240.png");
                    public static readonly string ui_icons_cccccc_256x240_png = Url("ui-icons_cccccc_256x240.png");
                    public static readonly string ui_icons_ffffff_256x240_png = Url("ui-icons_ffffff_256x240.png");
                }
            
                public static readonly string jquery_ui_1_9_2_custom_css = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/jquery-ui-1.9.2.custom.min.css") ? Url("jquery-ui-1.9.2.custom.min.css") : Url("jquery-ui-1.9.2.custom.css");
                     
                public static readonly string jquery_ui_1_9_2_custom_min_css = Url("jquery-ui-1.9.2.custom.min.css");
            }
        
            public static readonly string fancybox_css = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/fancybox.min.css") ? Url("fancybox.min.css") : Url("fancybox.css");
                 
            public static readonly string font_css = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/font.min.css") ? Url("font.min.css") : Url("font.css");
                 
            public static readonly string grid_css = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/grid.min.css") ? Url("grid.min.css") : Url("grid.css");
                 
            public static readonly string icon_css = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/icon.min.css") ? Url("icon.min.css") : Url("icon.css");
                 
            public static readonly string jquery_cleditor_css = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/jquery.cleditor.min.css") ? Url("jquery.cleditor.min.css") : Url("jquery.cleditor.css");
                 
            public static readonly string jquery_fileupload_ui_css = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/jquery.fileupload-ui.min.css") ? Url("jquery.fileupload-ui.min.css") : Url("jquery.fileupload-ui.css");
                 
            public static readonly string Login_css = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/Login.min.css") ? Url("Login.min.css") : Url("Login.css");
                 
            public static readonly string reset_css = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/reset.min.css") ? Url("reset.min.css") : Url("reset.css");
                 
            public static readonly string sasan_css = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/sasan.min.css") ? Url("sasan.min.css") : Url("sasan.css");
                 
            public static readonly string site_css = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/site.min.css") ? Url("site.min.css") : Url("site.css");
                 
            [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
            public static class theme {
                private const string URLPATH = "~/Content/css/theme";
                public static string Url() { return T4MVCHelpers.ProcessVirtualPath(URLPATH); }
                public static string Url(string fileName) { return T4MVCHelpers.ProcessVirtualPath(URLPATH + "/" + fileName); }
                public static readonly string default_css = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/default.min.css") ? Url("default.min.css") : Url("default.css");
                     
            }
        
        }
    
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public static class font {
            private const string URLPATH = "~/Content/font";
            public static string Url() { return T4MVCHelpers.ProcessVirtualPath(URLPATH); }
            public static string Url(string fileName) { return T4MVCHelpers.ProcessVirtualPath(URLPATH + "/" + fileName); }
            public static readonly string icomoonultimate_eot = Url("icomoonultimate.eot");
            public static readonly string icomoonultimate_otf = Url("icomoonultimate.otf");
            public static readonly string icomoonultimate_svg = Url("icomoonultimate.svg");
            public static readonly string icomoonultimate_ttf = Url("icomoonultimate.ttf");
            public static readonly string icomoonultimate_woff = Url("icomoonultimate.woff");
            public static readonly string opensans_regular_webfont_eot = Url("opensans-regular-webfont.eot");
            public static readonly string opensans_regular_webfont_svg = Url("opensans-regular-webfont.svg");
            public static readonly string opensans_regular_webfont_ttf = Url("opensans-regular-webfont.ttf");
            public static readonly string opensans_regular_webfont_woff = Url("opensans-regular-webfont.woff");
            public static readonly string pts55f_webfont_eot = Url("pts55f-webfont.eot");
            public static readonly string pts55f_webfont_svg = Url("pts55f-webfont.svg");
            public static readonly string pts55f_webfont_ttf = Url("pts55f-webfont.ttf");
            public static readonly string pts55f_webfont_woff = Url("pts55f-webfont.woff");
        }
    
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public static class Images {
            private const string URLPATH = "~/Content/Images";
            public static string Url() { return T4MVCHelpers.ProcessVirtualPath(URLPATH); }
            public static string Url(string fileName) { return T4MVCHelpers.ProcessVirtualPath(URLPATH + "/" + fileName); }
            public static readonly string add1_jpg = Url("add1.jpg");
            public static readonly string add2_png = Url("add2.png");
            public static readonly string add3_png = Url("add3.png");
            public static readonly string add4_png = Url("add4.png");
            public static readonly string buttons_gif = Url("buttons.gif");
            public static readonly string coming_soon_jpg = Url("coming_soon.jpg");
            public static readonly string ESIOne_logo_png = Url("ESIOne_logo.png");
            public static readonly string ESIOne_logo_small_png = Url("ESIOne_logo_small.png");
            public static readonly string ESIOne_SignUp_png = Url("ESIOne_SignUp.png");
            public static readonly string Facebook_LoginWith_png = Url("Facebook_LoginWith.png");
            [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
            public static class fancybox {
                private const string URLPATH = "~/Content/Images/fancybox";
                public static string Url() { return T4MVCHelpers.ProcessVirtualPath(URLPATH); }
                public static string Url(string fileName) { return T4MVCHelpers.ProcessVirtualPath(URLPATH + "/" + fileName); }
                public static readonly string blank_gif = Url("blank.gif");
                public static readonly string fancy_close_png = Url("fancy_close.png");
                public static readonly string fancy_loading_png = Url("fancy_loading.png");
                public static readonly string fancy_nav_left_png = Url("fancy_nav_left.png");
                public static readonly string fancy_nav_right_png = Url("fancy_nav_right.png");
                public static readonly string fancy_shadow_e_png = Url("fancy_shadow_e.png");
                public static readonly string fancy_shadow_n_png = Url("fancy_shadow_n.png");
                public static readonly string fancy_shadow_ne_png = Url("fancy_shadow_ne.png");
                public static readonly string fancy_shadow_nw_png = Url("fancy_shadow_nw.png");
                public static readonly string fancy_shadow_s_png = Url("fancy_shadow_s.png");
                public static readonly string fancy_shadow_se_png = Url("fancy_shadow_se.png");
                public static readonly string fancy_shadow_sw_png = Url("fancy_shadow_sw.png");
                public static readonly string fancy_shadow_w_png = Url("fancy_shadow_w.png");
                public static readonly string fancy_title_left_png = Url("fancy_title_left.png");
                public static readonly string fancy_title_main_png = Url("fancy_title_main.png");
                public static readonly string fancy_title_over_png = Url("fancy_title_over.png");
                public static readonly string fancy_title_right_png = Url("fancy_title_right.png");
                public static readonly string fancybox_x_png = Url("fancybox-x.png");
                public static readonly string fancybox_y_png = Url("fancybox-y.png");
                public static readonly string fancybox_png = Url("fancybox.png");
                public static readonly string jquery_mousewheel_3_0_4_pack_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/jquery.mousewheel-3.0.4.pack.min.js") ? Url("jquery.mousewheel-3.0.4.pack.min.js") : Url("jquery.mousewheel-3.0.4.pack.js");
                              
            }
        
            public static readonly string FB_Login_png = Url("FB_Login.png");
            public static readonly string minus_white_png = Url("minus-white.png");
            public static readonly string minus_png = Url("minus.png");
            public static readonly string noimage_jpg = Url("noimage.jpg");
            public static readonly string plus_white_png = Url("plus-white.png");
            public static readonly string plus_png = Url("plus.png");
            public static readonly string Profile_Img_png = Url("Profile-Img.png");
            public static readonly string profile_jpg = Url("profile.jpg");
            public static readonly string progressbar_gif = Url("progressbar.gif");
            public static readonly string search_button3_gif = Url("search-button3.gif");
            public static readonly string toolbar_gif = Url("toolbar.gif");
        }
    
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public static class js {
            private const string URLPATH = "~/Content/js";
            public static string Url() { return T4MVCHelpers.ProcessVirtualPath(URLPATH); }
            public static string Url(string fileName) { return T4MVCHelpers.ProcessVirtualPath(URLPATH + "/" + fileName); }
            public static readonly string custom_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/custom.min.js") ? Url("custom.min.js") : Url("custom.js");
                          
            public static readonly string jquery_1_8_3_min_js = Url("jquery-1.8.3.min.js");
            public static readonly string jquery_ui_1_9_2_custom_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/jquery-ui-1.9.2.custom.min.js") ? Url("jquery-ui-1.9.2.custom.min.js") : Url("jquery-ui-1.9.2.custom.js");
                          
            public static readonly string jquery_ui_1_9_2_custom_min_js = Url("jquery-ui-1.9.2.custom.min.js");
            public static readonly string jquery_adipoli_min_js = Url("jquery.adipoli.min.js");
            public static readonly string jquery_cleditor_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/jquery.cleditor.min.js") ? Url("jquery.cleditor.min.js") : Url("jquery.cleditor.js");
                          
            public static readonly string jquery_easing_1_3_min_js = Url("jquery.easing.1.3.min.js");
            public static readonly string jquery_easytabs_min_js = Url("jquery.easytabs.min.js");
            public static readonly string jquery_fancybox_1_3_4_pack_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/jquery.fancybox-1.3.4.pack.min.js") ? Url("jquery.fancybox-1.3.4.pack.min.js") : Url("jquery.fancybox-1.3.4.pack.js");
                          
            public static readonly string jquery_fileupload_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/jquery.fileupload.min.js") ? Url("jquery.fileupload.min.js") : Url("jquery.fileupload.js");
                          
            public static readonly string jquery_isotope_min_js = Url("jquery.isotope.min.js");
            public static readonly string jquery_unobtrusive_ajax_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/jquery.unobtrusive-ajax.min.js") ? Url("jquery.unobtrusive-ajax.min.js") : Url("jquery.unobtrusive-ajax.js");
                          
            public static readonly string jquery_unobtrusive_ajax_min_js = Url("jquery.unobtrusive-ajax.min.js");
            public static readonly string jquery_validate_vsdoc_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/jquery.validate-vsdoc.min.js") ? Url("jquery.validate-vsdoc.min.js") : Url("jquery.validate-vsdoc.js");
                          
            public static readonly string jquery_validate_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/jquery.validate.min.js") ? Url("jquery.validate.min.js") : Url("jquery.validate.js");
                          
            public static readonly string jquery_validate_min_js = Url("jquery.validate.min.js");
            public static readonly string jquery_validate_unobtrusive_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/jquery.validate.unobtrusive.min.js") ? Url("jquery.validate.unobtrusive.min.js") : Url("jquery.validate.unobtrusive.js");
                          
            public static readonly string jquery_validate_unobtrusive_min_js = Url("jquery.validate.unobtrusive.min.js");
            public static readonly string less_1_3_1_min_js = Url("less-1.3.1.min.js");
            public static readonly string LoadVeryFirst_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/LoadVeryFirst.min.js") ? Url("LoadVeryFirst.min.js") : Url("LoadVeryFirst.js");
                          
            public static readonly string modernizr_2_5_3_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/modernizr-2.5.3.min.js") ? Url("modernizr-2.5.3.min.js") : Url("modernizr-2.5.3.js");
                          
            public static readonly string respond_min_js = Url("respond.min.js");
        }
    
    }

    [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
    public static partial class bundles
    {
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public static partial class scripts {}
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public static partial class styles {}
    }
}

[GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
public static class T4MVCHelpers {
    // You can change the ProcessVirtualPath method to modify the path that gets returned to the client.
    // e.g. you can prepend a domain, or append a query string:
    //      return "http://localhost" + path + "?foo=bar";
    private static string ProcessVirtualPathDefault(string virtualPath) {
        // The path that comes in starts with ~/ and must first be made absolute
        string path = VirtualPathUtility.ToAbsolute(virtualPath);
        
        // Add your own modifications here before returning the path
        return path;
    }

    // Calling ProcessVirtualPath through delegate to allow it to be replaced for unit testing
    public static Func<string, string> ProcessVirtualPath = ProcessVirtualPathDefault;


    // Logic to determine if the app is running in production or dev environment
    public static bool IsProduction() { 
        return (HttpContext.Current != null && !HttpContext.Current.IsDebuggingEnabled); 
    }
}





#endregion T4MVC
#pragma warning restore 1591


